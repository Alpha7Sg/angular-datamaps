"use strict";angular.module("datamaps",[]),angular.module("datamaps").directive("datamap",["d3","topojson","Datamap",function(a,b,c){return{restrict:"EA",scope:{data:"=",options:"=",colors:"=?",type:"@?"},template:'<div id="map-container" style="position: relative; display: block; height: {{ height }}px; width: {{ width }}px"></div>',link:function(a,b){function d(){return{element:b[0].children[0],scope:"usa"===a.type||"world"===a.type?a.type:"usa",height:a.height,width:a.width,projection:"world"===a.type?"mercator":"equirectangular",fills:{defaultFill:"#b9b9b9"},data:{}}}function e(b,c){return angular.forEach(c,function(a){b.data[a.location]={fillKey:a.value}}),angular.forEach(_.uniq(_.pluck(c,"value")),function(c,d){b.fills[c]=a.colors[d]}),b}a.mapOptions=d(),a.api={refresh:function(){a.api.updateWithOptions(a.options,a.data)},updateWithOptions:function(b,f){a.api.clearElement(),angular.isDefined(b)&&(a.width=b.chart.width||600,a.height=b.chart.height||.6*a.width,a.mapOptions=d(),f[0].values.length&&(a.mapOptions=e(a.mapOptions,f[0].values)),a.mapOptions.geographyConfig=angular.extend({},b.chart.geographyConfig),a.map=new c(a.mapOptions),b.chart&&(b.chart.labels&&a.map.labels({labelColor:b.chart.labelColor?b.chart.labelColor:"#333333",fontSize:b.chart.labelSize?b.chart.labelSize:12}),b.chart.legend&&a.map.legend()))},updateWithData:function(b){a.map.updateChoropleth(b)},clearElement:function(){a.map=null,b.find("#map-container").empty()}},a.$watch("[options, colors]",function(){a.api.refresh()},!0),a.$watch("data",function(b,c){if(b[0].values.length!==c[0].values.length)a.api.refresh();else{var d={};angular.forEach(b[0].values,function(a){d[a.location]={fillKey:a.value}}),a.api.updateWithData(d)}},!0)}}}]);